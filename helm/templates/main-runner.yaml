apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mainRunner.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.mainRunner.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.mainRunner.name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - name: {{ .Values.mainRunner.name }}
          image: "{{ .Values.mainRunner.image.repository }}:{{ .Values.global.imageTag | default .Values.mainRunner.image.tag }}"
          command: ["/bin/bash", "/entrypoint.sh"]
          args: ["{{ .Values.mainRunner.env.RUNNER_SCRIPT }}"]
          resources:
            {{- toYaml .Values.mainRunner.resources | nindent 12 }}
          env:
            - name: GCP_PROJECT_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}-config
                  key: GCP_PROJECT_ID
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}-config
                  key: ENVIRONMENT
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}-config
                  key: LOG_LEVEL
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: api-secrets
                  key: openai-api-key
                  optional: true
            - name: KITE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: api-secrets
                  key: kite-api-key
                  optional: true
            - name: KITE_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: api-secrets
                  key: kite-api-secret
                  optional: true
            {{- range $key, $val := .Values.mainRunner.env }}
            - name: {{ $key }}
              value: "{{ $val }}"
            {{- end }}
            - name: PYTHONPATH
              value: "/app:/app/runner"
          volumeMounts:
            - name: entrypoint
              mountPath: /entrypoint.sh
              subPath: entrypoint.sh
      volumes:
        - name: entrypoint
          configMap:
            name: entrypoint-config
            defaultMode: 0755 