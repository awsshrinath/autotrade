{{- if .Values.secrets.create | default true }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.dashboard.secretName | default "dashboard-secrets" }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: tron-system
    app.kubernetes.io/component: dashboard-auth
    app.kubernetes.io/part-of: tron-trading-system
type: Opaque
data:
  username: {{ .Values.dashboard.auth.username | default "admin" | b64enc }}
  password: {{ .Values.dashboard.auth.password | default (randAlphaNum 16) | b64enc }}

---
apiVersion: v1
kind: Secret
metadata:
  name: api-secrets
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: tron-system
    app.kubernetes.io/component: api-credentials
    app.kubernetes.io/part-of: tron-trading-system
type: Opaque
data:
  {{- if .Values.secrets.openaiApiKey }}
  openai-api-key: {{ .Values.secrets.openaiApiKey | b64enc }}
  {{- else }}
  openai-api-key: {{ "" | b64enc }}
  {{- end }}
  {{- if .Values.secrets.kiteApiKey }}
  kite-api-key: {{ .Values.secrets.kiteApiKey | b64enc }}
  {{- else }}
  kite-api-key: {{ "" | b64enc }}
  {{- end }}
  {{- if .Values.secrets.kiteApiSecret }}
  kite-api-secret: {{ .Values.secrets.kiteApiSecret | b64enc }}
  {{- else }}
  kite-api-secret: {{ "" | b64enc }}
  {{- end }}

---
{{- if .Values.secrets.gcpServiceAccountKey }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secrets.gcpServiceAccountKeyName | default "gcp-service-account-key" }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: tron-system
    app.kubernetes.io/component: gcp-credentials
    app.kubernetes.io/part-of: tron-trading-system
type: Opaque
data:
  key.json: {{ .Values.secrets.gcpServiceAccountKey | b64enc }}
{{- else }}
# GCP Service Account Key Secret - Must be created manually or via external secret management
# kubectl create secret generic gcp-service-account-key \
#   --from-file=key.json=path/to/service-account-key.json \
#   --namespace={{ .Values.namespace }}
{{- end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: tron-trading-tls
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: tron-system
    app.kubernetes.io/component: ssl-certificates
    app.kubernetes.io/part-of: tron-trading-system
type: kubernetes.io/tls
data:
  # TLS certificates will be auto-generated by GKE managed certificates
  # or can be provided manually
  tls.crt: {{ "" | b64enc }}
  tls.key: {{ "" | b64enc }}

{{- end }}