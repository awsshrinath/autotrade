apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.optionsTrader.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.optionsTrader.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.optionsTrader.name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - name: {{ .Values.optionsTrader.name }}
          image: "{{ .Values.optionsTrader.image.repository }}:{{ .Values.global.imageTag | default .Values.optionsTrader.image.tag }}"
          command: ["/bin/bash", "/entrypoint.sh"]
          args: ["{{ .Values.optionsTrader.env.RUNNER_SCRIPT }}"]
          resources:
            {{- toYaml .Values.optionsTrader.resources | nindent 12 }}
          env:
            {{- range $key, $val := .Values.optionsTrader.env }}
            - name: {{ $key }}
              value: "{{ $val }}"
            {{- end }}
            - name: GCP_PROJECT_ID
              value: "{{ .Values.gcpProjectId }}"
            - name: PYTHONPATH
              value: "/app:/app/runner:/app/options_trading"
          volumeMounts:
            - name: entrypoint
              mountPath: /entrypoint.sh
              subPath: entrypoint.sh
          readinessProbe:
            exec:
              command:
                - pgrep
                - -f
                - "{{ .Values.optionsTrader.env.RUNNER_SCRIPT }}"
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - pgrep
                - -f
                - "{{ .Values.optionsTrader.env.RUNNER_SCRIPT }}"
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
      volumes:
        - name: entrypoint
          configMap:
            name: entrypoint-config
            defaultMode: 0755 