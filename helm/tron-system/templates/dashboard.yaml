{{- if .Values.dashboard.enabled | default true }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.dashboard.name | default "trading-dashboard" }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.dashboard.name | default "trading-dashboard" }}
    component: dashboard
spec:
  replicas: {{ .Values.dashboard.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ .Values.dashboard.name | default "trading-dashboard" }}
  template:
    metadata:
      labels:
        app: {{ .Values.dashboard.name | default "trading-dashboard" }}
        component: dashboard
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - name: dashboard
          image: "{{ .Values.dashboard.image.repository | default "asia-south1-docker.pkg.dev/autotrade-453303/gpt-repo/trading-dashboard" }}:{{ .Values.dashboard.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.dashboard.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: {{ .Values.dashboard.service.targetPort | default 8501 }}
              name: http
          resources:
            {{- toYaml .Values.dashboard.resources | default (dict "requests" (dict "cpu" "200m" "memory" "512Mi") "limits" (dict "cpu" "1000m" "memory" "1Gi")) | nindent 12 }}
          env:
            - name: ENVIRONMENT
              value: {{ .Values.environment | default "production" | quote }}
            - name: DASHBOARD_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dashboard.secretName | default "dashboard-secrets" }}
                  key: username
            - name: DASHBOARD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dashboard.secretName | default "dashboard-secrets" }}
                  key: password
            - name: AUTH_ENABLED
              value: {{ .Values.dashboard.auth.enabled | default true | quote }}
            - name: REAL_TIME_UPDATES
              value: {{ .Values.dashboard.realTimeUpdates | default true | quote }}
            - name: AUTO_REFRESH_INTERVAL
              value: {{ .Values.dashboard.autoRefreshInterval | default 30 | quote }}
            - name: FEATURE_LIVE_TRADING
              value: {{ .Values.dashboard.features.liveTrading | default false | quote }}
            - name: FEATURE_COGNITIVE_INSIGHTS
              value: {{ .Values.dashboard.features.cognitiveInsights | default true | quote }}
            - name: FEATURE_RISK_MONITORING
              value: {{ .Values.dashboard.features.riskMonitoring | default true | quote }}
            - name: ALERTS_ENABLED
              value: {{ .Values.dashboard.features.alerts | default true | quote }}
          livenessProbe:
            httpGet:
              path: /_stcore/health
              port: {{ .Values.dashboard.service.targetPort | default 8501 }}
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /_stcore/health
              port: {{ .Values.dashboard.service.targetPort | default 8501 }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: logs-volume
              mountPath: /app/logs
      volumes:
        - name: logs-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.dashboard.name | default "trading-dashboard" }}-service
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.dashboard.name | default "trading-dashboard" }}
spec:
  selector:
    app: {{ .Values.dashboard.name | default "trading-dashboard" }}
  ports:
    - name: http
      protocol: TCP
      port: {{ .Values.dashboard.service.port | default 80 }}
      targetPort: {{ .Values.dashboard.service.targetPort | default 8501 }}
  type: {{ .Values.dashboard.service.type | default "ClusterIP" }}

{{- if .Values.dashboard.ingress.enabled | default true }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.dashboard.name | default "trading-dashboard" }}-ingress
  namespace: {{ .Values.namespace }}
  annotations:
    {{- with .Values.dashboard.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if .Values.dashboard.ingress.tls }}
  tls:
    {{- range .Values.dashboard.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.dashboard.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ $.Values.dashboard.name | default "trading-dashboard" }}-service
                port:
                  number: {{ $.Values.dashboard.service.port | default 80 }}
          {{- end }}
    {{- end }}
{{- end }}
{{- end }}