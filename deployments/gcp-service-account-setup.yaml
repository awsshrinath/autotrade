# GCP Service Account Setup Instructions
# This file documents the required GCP setup that should be done before deployment

# 1. Create the GCP service account (if not exists)
# gcloud iam service-accounts create gpt-runner-sa \
#   --display-name="GPT Runner Service Account" \
#   --description="Service account for GPT trading system" \
#   --project=autotrade-453303

# 2. Grant necessary IAM roles to the service account
# gcloud projects add-iam-policy-binding autotrade-453303 \
#   --member="serviceAccount:gpt-runner-sa@autotrade-453303.iam.gserviceaccount.com" \
#   --role="roles/secretmanager.secretAccessor"

# gcloud projects add-iam-policy-binding autotrade-453303 \
#   --member="serviceAccount:gpt-runner-sa@autotrade-453303.iam.gserviceaccount.com" \
#   --role="roles/storage.admin"

# gcloud projects add-iam-policy-binding autotrade-453303 \
#   --member="serviceAccount:gpt-runner-sa@autotrade-453303.iam.gserviceaccount.com" \
#   --role="roles/datastore.user"

# gcloud projects add-iam-policy-binding autotrade-453303 \
#   --member="serviceAccount:gpt-runner-sa@autotrade-453303.iam.gserviceaccount.com" \
#   --role="roles/container.developer"

# 3. Enable Workload Identity binding between K8s SA and GCP SA
# gcloud iam service-accounts add-iam-policy-binding \
#   gpt-runner-sa@autotrade-453303.iam.gserviceaccount.com \
#   --role roles/iam.workloadIdentityUser \
#   --member "serviceAccount:autotrade-453303.svc.id.goog[gpt/gpt-runner-sa]"

# 4. Annotate the Kubernetes service account (already done in service-account.yaml)
# kubectl annotate serviceaccount gpt-runner-sa \
#   -n gpt \
#   iam.gke.io/gcp-service-account=gpt-runner-sa@autotrade-453303.iam.gserviceaccount.com

---
# Secret containing the service account key for local development
apiVersion: v1
kind: Secret
metadata:
  name: gcp-service-account-key
  namespace: gpt
type: Opaque
data:
  # This should be populated by CI/CD or manually:
  # kubectl create secret generic gcp-service-account-key \
  #   --from-file=key.json=./gpt-runner-sa-key.json \
  #   -n gpt
  key.json: "" 