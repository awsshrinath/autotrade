apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-aggregator
  namespace: gpt  # Use existing namespace
  labels:
    app: log-aggregator
    component: log-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-aggregator
  template:
    metadata:
      labels:
        app: log-aggregator
        component: log-monitoring
    spec:
      serviceAccountName: gpt-runner-sa  # Use existing service account with proper RBAC
      containers:
      - name: log-aggregator
        image: asia-south1-docker.pkg.dev/autotrade-453303/gpt-repo/log-aggregator:latest
        ports:
        - containerPort: 8001
          name: http
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "2Gi"  # Higher memory for log processing
        env:
        # --- GCP Configuration ---
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/secrets/google/key.json"
        - name: FIRESTORE_PROJECT_ID
          valueFrom:
            configMapKeyRef:
              name: log-aggregator-config
              key: FIRESTORE_PROJECT_ID
        - name: GCS_BUCKET_NAME
          value: "__GCS_BUCKET_NAME__" # This will be replaced by the CI/CD pipeline

        # --- Kubernetes Configuration ---
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: log-aggregator-config
              key: KUBERNETES_NAMESPACE
        - name: KUBERNETES_CONFIG_PATH
          value: ""  # Use in-cluster config

        # --- OpenAI Configuration ---
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: log-aggregator-secrets
              key: openai-api-key
        - name: OPENAI_MODEL
          valueFrom:
            configMapKeyRef:
              name: log-aggregator-config
              key: OPENAI_MODEL
        - name: OPENAI_MAX_TOKENS
          valueFrom:
            configMapKeyRef:
              name: log-aggregator-config
              key: OPENAI_MAX_TOKENS
        - name: OPENAI_TEMPERATURE
          valueFrom:
            configMapKeyRef:
              name: log-aggregator-config
              key: OPENAI_TEMPERATURE
        - name: OPENAI_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: log-aggregator-config
              key: OPENAI_TIMEOUT

        # --- Application Configuration ---
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: log-aggregator-config
              key: LOG_LEVEL
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: log-aggregator-config
              key: API_HOST
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: log-aggregator-config
              key: API_PORT
        - name: API_PREFIX
          valueFrom:
            configMapKeyRef:
              name: log-aggregator-config
              key: API_PREFIX
        - name: WORKERS
          valueFrom:
            configMapKeyRef:
              name: log-aggregator-config
              key: WORKERS

        # --- Authentication Configuration ---
        - name: LOG_AGGREGATOR_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: log-aggregator-secrets
              key: secret-key

        # --- Performance Configuration ---
        - name: MAX_LOG_ENTRIES
          valueFrom:
            configMapKeyRef:
              name: log-aggregator-config
              key: MAX_LOG_ENTRIES
        - name: DEFAULT_PAGE_SIZE
          valueFrom:
            configMapKeyRef:
              name: log-aggregator-config
              key: DEFAULT_PAGE_SIZE
        - name: MAX_PAGE_SIZE
          valueFrom:
            configMapKeyRef:
              name: log-aggregator-config
              key: MAX_PAGE_SIZE

        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: google-cloud-key
          mountPath: /var/secrets/google
          readOnly: true
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: google-cloud-key
        secret:
          secretName: gcp-service-account-key
      - name: logs-volume
        emptyDir: {}
