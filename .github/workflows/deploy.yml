name: Deploy Log Aggregator to GKE

on:
  push:
    branches:
      - main
    paths:
      - 'gpt_runner/log_aggregator/**'
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}' # e.g., projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
        service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}' # e.g., my-service-account@my-project.iam.gserviceaccount.com

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Configure Docker
      run: gcloud auth configure-docker --quiet

    - name: Create Kubernetes secrets
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
        GKE_ZONE: ${{ secrets.GKE_ZONE }}
      run: |
        gcloud container clusters get-credentials "${GKE_CLUSTER}" --zone "${GKE_ZONE}" --project "${GCP_PROJECT_ID}"
        kubectl create secret generic openai-api-key-secret --from-literal=api_key='${{ secrets.OPENAI_API_KEY }}' --dry-run=client -o yaml | kubectl apply -f -
        kubectl create secret generic fastapi-api-key-secret --from-literal=api_key_hash='${{ secrets.API_KEY_HASH }}' --dry-run=client -o yaml | kubectl apply -f -

    - name: Run Deploy Script
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCS_BUCKET_NAME: ${{ secrets.GCS_BUCKET_NAME }}
        GKE_CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
        GKE_ZONE: ${{ secrets.GKE_ZONE }}
        DOCKER_IMAGE: ${{ steps.build.outputs.image }}
      run: ./scripts/deploy_log_aggregator.sh 